% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample_cv.R
\name{resample_cv}
\alias{resample_cv}
\title{Generate data resamples using cross validation}
\usage{
resample_cv(data, ..., k = 3, n = 1)
}
\arguments{
\item{data}{data.frame, the data to resample.}

\item{...}{unquoted names of columns of .data to stratify by. Usually they are discrete variables.}

\item{k}{integer, the number of cross-validation folds.}

\item{n}{integer, the number of times to repeat the creation of k folds
(n>1 means performing repeated cross validation).}
}
\value{
A tibble with columns
\itemize{
\item train : an object of class modelr::resample. It contains a pointer to .data
and the indexes of the rows that are in the training set. To extract
the training set, use \code{as.data.frame()}; to extract the row indexes
use \code{as.integer()}
\item val   : an object of class modelr::resample with the validation set = the
fold that is not in the training set.
\item fold  : integer, the fold index.
\item rep   : integer, the repetition index.
}
}
\description{
Generate data resamples using cross validation
}
\examples{
resample_cv(mtcars, k=3)
resample_cv(mtcars, k=3, rep=2)

# stratified cross-val
rs  <- resample_cv(mtcars, k=4)
rss <- resample_cv(mtcars, k=4, gear)
sapply(rs$train, function(x) {sum(data.frame(x)$gear==4)})
# = variable number of occurrence of gear==4 in the training portion
sapply(rss$train, function(x) {sum(data.frame(x)$gear==4)})
# = reliable number of gear==4 in the training portion
}
