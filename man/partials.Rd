% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/partials.R
\name{partials}
\alias{partials}
\title{Compute Univariate Partial Dependence}
\usage{
partials(object, expl, cores = 1, ...)
}
\arguments{
\item{object}{an object output by \code{xgb_fit()}, which contains a \code{model}
column.}

\item{expl}{a vector of explanatory variables to compute the partial
dependence to.}

\item{cores}{integer, number of cores to use for parallel computation.}

\item{...}{passed to \code{\link[pdp:partial]{pdp::partial()}}. Arguments of particular relevance are:
\itemize{
\item \code{grid.resolution} : an integer giving the number of equally spaced points
along continuous variables to compute the partial dependence at.
\item \code{quantiles=TRUE} and \code{probs} (a vector of probabilities with values in
[0,1]), to compute the partial dependence at those quantiles of the
continuous explanatory variables.
}}
}
\value{
The input object with a new column called \code{partial} containing a
data.frame with the average prediction of the model (column \code{yhat}) for a
given value (column \code{value}) of each explanatory variable (column
\code{variable}).
}
\description{
Compute the partial dependence functions (i.e. marginal effects) for each
model in a resample.
}
\details{
For each variable in \code{expl}, some target values are picked for
continuous variables (along a grid or quantiles typically, see the
arguments passed via \code{...}) and all levels are considered for categorical
ones. For each target value of each target explanatory variable:
\enumerate{
\item the training data is modified so that the target variable is made
constant, equal to its target value, everywhere; all other explanatory
variables remain unchanged.
\item the model predictions are computed for this new data set.
\item the predicted values are averaged, this gives \code{yhat} : the average
prediction of the model for this value of the target variable.
}
}
\examples{
# fit a model on 5 bootstraps
m <- resample_boot(mtcars, 5) \%>\%
  xgb_fit(resp="mpg", expl=c("cyl", "hp", "qsec"),
    eta=0.1, max_depth=4, nrounds=20)
# compute the 5 partial dependence and plot them
m <- partials(m, expl=c("hp", "cyl"))
plot_partials(m, fns=NULL)
# do the same with a finer grid
m <- partials(m, expl=c("hp", "cyl"), grid.resolution=50)
plot_partials(m, fns=NULL)
# or along quantiles
m <- partials(m, expl=c("hp", "cyl"), quantiles=TRUE, probs=0:20/20)
plot_partials(m, fns=NULL)
}
\seealso{
Other partial dependence plots functions: 
\code{\link{plot_partials}()}
}
\concept{partial dependence plots functions}
